# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pull Request

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build_pr:
    name: Build
    runs-on: self-hosted
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Set up Python 3.9.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.11"
    - name: Install Venv
      run: |
        .\tools\create_env.ps1
    - name: Install Libs
      run: |
        .\tools\fetch_thirdparty_libs.ps1
    - name: Build
      run: |
        .\tools\build.ps1
    - name: Rename Build
      run: |
        $current_dir = Get-Location
        $version_file = Get-Content -Path "$current_dir\openpype\version.py"
        $result = [regex]::Matches($version_file, '__version__ = "(?<version>\d+\.\d+.\d+.*)"')
        $openpype_version = $result[0].Groups['version'].Value
        cd build
        mv exe.win-amd64-3.9 $openpype_version
    - name: Upload to S3
      run: |
        $current_dir = Get-Location
        $version_file = Get-Content -Path "$current_dir\openpype\version.py"
        $result = [regex]::Matches($version_file, '__version__ = "(?<version>\d+\.\d+.\d+.*)"')
        $openpype_version = $result[0].Groups['version'].Value
        $awsCliPath = "C:\Program Files\Amazon\AWSCLIV2\aws.exe"
        cd build
        $sourcePath = $openpype_version
        $destinationPath = "${{ vars.S3_BUCKET }}/${{ vars.BUILDS }}/pull-request/$openpype_version/"
        & $awsCliPath s3 sync $sourcePath $destinationPath
        echo "OPENPYPE_VERSION=${OPENPYPE_VERSION}" >> $GITHUB_ENV

    - name: Trigger Deploy Workflow
      run: |
        echo "Triggering deploy workflow in hornet-animation/depoly-localvm..."
        payload='{"ref":"main"}'  # Customize the payload if needed
        echo "::set-output name=payload::$payload"
        echo "::set-env name=TRIGGER_REPO::hornet-animation/depoly-localvm"
        echo "Triggering deploy workflow in hornet-animation/depoly-localvm..." > trigger.log
        curl -X POST \
          -H "Authorization: token ${{ secrets.G_TOKEN }}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          -d "{\"event_type\": \"trigger-deploy\", \"client_payload\": $payload}" \
          https://api.github.com/repos/hornet-animation/depoly-localvm/dispatches
      continue-on-error: true

    - name: Trigger Deploy Workflow Status
      if: ${{ steps.trigger.outputs.payload == '{}' && failure() }}
      run: cat trigger.log
      # env:
      #   OPENPYPE_VERSION: $OPENPYPE_VERSION 
