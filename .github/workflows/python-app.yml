# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: self-hosted

    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Set up Python 3.9.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.11"
    - name: Install Venv
      run: |
        .\tools\create_env.ps1
    - name: Install Libs
      run: |
        .\tools\fetch_thirdparty_libs.ps1
    - name: Build
      run: |
        .\tools\build.ps1
    - name: Rename Build
      run: |
        $current_dir = Get-Location
        $version_file = Get-Content -Path "$current_dir\openpype\version.py"
        $result = [regex]::Matches($version_file, '__version__ = "(?<version>\d+\.\d+.\d+.*)"')
        $openpype_version = $result[0].Groups['version'].Value
        Write-Color $openpype_version
        mv .\build\exe.win-amd64-3.9 .\build\$openpype_version

    - name: Upload to S3
      run: |
        $result = [regex]::Matches($version_file, '__version__ = "(?<version>\d+\.\d+.\d+.*)"')
        $openpype_version = $result[0].Groups['version'].Value
        $awsCliPath = "C:\Program Files\Amazon\AWSCLIV2\aws.exe"
        $sourcePath = ".\build\$openpype_version\"
        $destinationPath = "${{ vars.S3_BUCKET_WIN }}$openpype_version/"
        & $awsCliPath s3 sync $sourcePath $destinationPath

    # - name: Rename & Export Build
    #   run: |
    #     net use T: /delete
    #     $net = new-object -ComObject WScript.Network
    #     $net.MapNetworkDrive("T:", "\\fs.hellohornet.lan\tools", $false, $(cat C:\user.txt), $(cat C:\pass.txt))
    #     cd build
    #     $platform = "amd64"
    #     $date = Get-Date -Format "M-d-yy"
    #     $commitmsg = git log -1 --pretty=format:"%s"
    #     $commitmsg -match "\[(.*)\]"
    #     $commitmsg = $matches[1]
    #     $buildname = ($commitmsg + "-" + $date + "-" + $platform)
    #     mv exe.win-amd64-3.9 $buildname
    #     cp $buildname T:\dev\_builds -R
    - name: Cleanup local build folder
      run: |
        cd build
        rm -R *
